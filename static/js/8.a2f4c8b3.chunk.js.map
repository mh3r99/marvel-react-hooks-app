{"version":3,"sources":["components/pages/SinglePage.js","components/skeleton/Skeleton.js","utils/setContent.js"],"names":["SinglePage","Component","dataType","id","useParams","useState","data","setData","useMarvelService","getComic","getCharacter","clearError","process","setProcess","useEffect","updateData","then","onDataLoaded","setContent","Skeleton","className","Spinner","ErrorMessage","Error"],"mappings":"mKA6CeA,UAtCI,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SACvBC,EAAOC,cAAPD,GACR,EAAwBE,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EACEC,cADMC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,WAAYC,EAA5C,EAA4CA,QAASC,EAArD,EAAqDA,WAGrDC,qBAAU,WACRC,MACC,CAACZ,IAEJ,IAAMY,EAAa,WAGjB,OAFAJ,IAEQT,GACN,IAAK,QACHO,EAASN,GACNa,KAAKC,GACLD,MAAK,kBAAMH,EAAW,gBACzB,MACF,IAAK,YACHH,EAAaP,GACVa,KAAKC,GACLD,MAAK,kBAAMH,EAAW,kBAIzBI,EAAe,SAACX,GACpBC,EAAQD,IAGV,OACE,qCACE,cAAC,IAAD,IACCY,YAAWN,EAASX,EAAWK,Q,mECrBvBa,EAjBE,WACb,OACI,qCACI,mBAAGC,UAAU,eAAb,0DACA,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,2BACf,qBAAKA,UAAU,4BAEnB,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,iCCMhBF,IAfI,SAACN,EAASX,EAAWK,GACtC,OAAQM,GACN,IAAK,UACH,OAAO,cAAC,EAAD,IACT,IAAK,UACH,OAAO,cAACS,EAAA,EAAD,IACT,IAAK,YACH,OAAO,cAACpB,EAAD,CAAWK,KAAMA,IAC1B,IAAK,QACH,OAAO,cAACgB,EAAA,EAAD,IACT,QACE,MAAM,IAAIC,MAAM,+B","file":"static/js/8.a2f4c8b3.chunk.js","sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\n\nimport useMarvelService from \"../../services/MarvelService\";\nimport AppBanner from \"../appBanner/AppBanner\";\nimport setContent from \"../../utils/setContent\";\n\nconst SinglePage = ({ Component, dataType }) => {\n  const { id } = useParams();\n  const [data, setData] = useState(null);\n  const { getComic, getCharacter, clearError, process, setProcess } =\n    useMarvelService();\n\n  useEffect(() => {\n    updateData();\n  }, [id]);\n\n  const updateData = () => {\n    clearError();\n\n    switch (dataType) {\n      case \"comic\":\n        getComic(id)\n          .then(onDataLoaded)\n          .then(() => setProcess(\"confirmed\"));\n        break;\n      case \"character\":\n        getCharacter(id)\n          .then(onDataLoaded)\n          .then(() => setProcess(\"confirmed\"));\n    }\n  };\n\n  const onDataLoaded = (data) => {\n    setData(data);\n  };\n\n  return (\n    <>\n      <AppBanner />\n      {setContent(process, Component, data)}\n    </>\n  );\n};\n\nexport default SinglePage;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import Spinner from \"../components/spinner/Spinner\";\r\nimport ErrorMessage from \"../components/errorMessage/ErrorMessage\";\r\nimport Skeleton from \"../components/skeleton/Skeleton\";\r\n\r\nconst setContent = (process, Component, data) => {\r\n  switch (process) {\r\n    case \"waiting\":\r\n      return <Skeleton />;\r\n    case \"loading\":\r\n      return <Spinner />;\r\n    case \"confirmed\":\r\n      return <Component data={data} />;\r\n    case \"error\":\r\n      return <ErrorMessage />;\r\n    default:\r\n      throw new Error(\"Unexpected process state\");\r\n  }\r\n};\r\n\r\nexport default setContent;\r\n"],"sourceRoot":""}